{
  "openapi": "3.0.0",
  "info": {
    "title": "This is academic software that simulates farm inventory management"
  },
  "tags": [
    {
      "name": "Item",
      "description": "All routes of Item"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "tags": ["items"],
        "summary": "Get all items",
        "description": "Returns all items",
        "operationId": "GetAllItems",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          },
          "204": {
            "description": "You dont have any item inserted."
          }
        }
      }
    },
    "/item/{id}": {
      "get": {
        "tags": ["items"],
        "summary": "Get item by ID",
        "description": "Returns a single item.",
        "operationId": "GetItemById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The item",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "An unexpected error was occurred."
          },
          "204": {
            "description": "That item not exists."
          }
        }
      },
      "delete": {
        "tags": ["items"],
        "summary": "Delete item by ID",
        "description": "Deletes a single item",
        "operationId": "DeleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "An unexpected error was occurred."
          },
          "200": {
            "description": "Item 1 was excluded with success."
          }
        }
      },
      "put": {
        "tags": ["items"],
        "summary": "Update item by ID",
        "description": "Updates an existing item",
        "operationId": "UpdateItem",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated item",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "An error was ocurred."
          },
          "204": {
            "description": "Item not found."
          }
        }
      }
    },
    "/item": {
      "post": {
        "tags": ["items"],
        "summary": "Add a new item",
        "description": "Creates a new item",
        "operationId": "AddItem",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created item",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "An error was occurred."
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "required": ["name", "description"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Item"
        },
        "description": {
          "type": "string",
          "example": "This is a sample item."
        },
        "quantity": {
          "type": "number",
          "example": "1"
        },
        "type": {
          "type": "string",
          "example": "This is a simple item"
        }
      }
    }
  }
}